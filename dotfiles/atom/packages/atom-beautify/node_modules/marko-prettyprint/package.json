{
  "_args": [
    [
      {
        "raw": "marko-prettyprint@^1.3.5",
        "scope": null,
        "escapedName": "marko-prettyprint",
        "name": "marko-prettyprint",
        "rawSpec": "^1.3.5",
        "spec": ">=1.3.5 <2.0.0",
        "type": "range"
      },
      "/tmp/d-11748-31601-168m5qz.n9wdkxd2t9/package.tgz"
    ]
  ],
  "_from": "marko-prettyprint@>=1.3.5 <2.0.0",
  "_id": "marko-prettyprint@1.3.5",
  "_inCache": true,
  "_location": "/atom-beautify/marko-prettyprint",
  "_nodeVersion": "7.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/marko-prettyprint-1.3.5.tgz_1488493874941_0.8560891328379512"
  },
  "_npmUser": {
    "name": "pnidem",
    "email": "pnidem@gmail.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {
    "brace-expansion": "1.1.7"
  },
  "_requested": {
    "raw": "marko-prettyprint@^1.3.5",
    "scope": null,
    "escapedName": "marko-prettyprint",
    "name": "marko-prettyprint",
    "rawSpec": "^1.3.5",
    "spec": ">=1.3.5 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/atom-beautify"
  ],
  "_resolved": "https://registry.npmjs.org/marko-prettyprint/-/marko-prettyprint-1.3.5.tgz",
  "_shasum": "fe710c15931e692f96be6206fa856d206ccd3d8c",
  "_shrinkwrap": null,
  "_spec": "marko-prettyprint@^1.3.5",
  "_where": "/tmp/d-11748-31601-168m5qz.n9wdkxd2t9/package.tgz",
  "author": {
    "name": "Patrick Steele-Idem",
    "email": "pnidem@gmail.com"
  },
  "bin": {
    "marko-prettyprint": "bin/marko-prettyprint"
  },
  "bugs": {
    "url": "https://github.com/marko-js/marko-prettyprint/issues"
  },
  "dependencies": {
    "argly": "^1.0.0",
    "editorconfig": "^0.13.2",
    "lasso-package-root": "^1.0.0",
    "marko": "^4.0.0",
    "minimatch": "^3.0.0",
    "resolve-from": "^2.0.0"
  },
  "description": "Prettyprint Marko template files in the syntax of your choice",
  "devDependencies": {
    "chai": "^3.5.0",
    "jshint": "^2.9.1",
    "mocha": "^3.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "fe710c15931e692f96be6206fa856d206ccd3d8c",
    "tarball": "https://registry.npmjs.org/marko-prettyprint/-/marko-prettyprint-1.3.5.tgz"
  },
  "gitHead": "548c757c49d6236355f5667a4aa08aa422b07e21",
  "homepage": "https://github.com/marko-js/marko-prettyprint/#readme",
  "keywords": [
    "prettyprint",
    "marko",
    "templates"
  ],
  "license": "ISC",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "pnidem",
      "email": "pnidem@gmail.com"
    }
  ],
  "name": "marko-prettyprint",
  "optionalDependencies": {},
  "readme": "marko-prettyprint\n=================\n\nPrettyprint Marko template files in the syntax and with the options of your choice.\n\n# Installation\n\nGlobal install of the command line utility:\n\n```bash\nnpm install marko-prettyprint --global\n```\n\nLocal project install:\n\n```bash\nnpm install marko-prettyprint --save\n```\n\n# Usage\n\n## Pretty print a single file from the command line\n\n\n```bash\nmarko-prettyprint template.marko --syntax html\n```\n\n## Pretty print a directory tree from the command line\n\n\n```bash\nmarko-prettyprint . --syntax html\n```\n\n## Pretty print a file in a Node.js app\n\n```javascript\nvar prettyPrintFile = require('marko-prettyprint').prettyPrintFile;\n\nvar templatePath = require('path').join(__dirname, 'template.marko');\nvar options = {\n    syntax: 'html'\n};\n\nvar prettySrc = prettyPrintFile(templatePath, options);\n```\n\n# Options\n\n- `eol` - The EOL sequence (defaults to `require('os').EOL`)\n- `filename` - The path to the template being pretty printed (required unless `prettyPrintFile(filename, options)` is used)\n- `indent` - The indent string (defaults to a `String` with four spaces)\n- `maxLen` - The max line length (defaults to `80`, set to `-1` to disable)\n- `configFiles` - Should search for `.marko-prettyprint`/`.editorconfig` files? (defaults to `true`)\n- `syntax` - The syntax to use. Can either be `\"html\"` or `\"concise\"` (defaults to `\"html\"`)\n\n# Configuration files\n\n## `.marko-prettyprint` config file\n\nWhen pretty printing a Marko template, `marko-prettyprint` will search up the directory tree looking for a `.marko-prettyprint` file. This file should be in the JSON format. For example:\n\n_my-project/.marko-prettyprint:_\n\n```json\n{\n    \"indent\": \"\\t\",\n    \"syntax\": \"concise\",    \n}\n```\n\n## `.editorconfig` file\n\n`marko-prettyprint` also supports [EditorConfig](https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties) files for configuring `maxLen`, `indent` and `eol`. For example:\n\n_my-project/.editorconfig:_\n\n```\nroot = true\n\n[*.marko]\nindent_style = space\nindent_size = 8\nend_of_line = lf\n```\n\n# API\n\n## JavaScript API\n\n### `require('marko-prettyprint')`\n\n#### `prettyPrintSource(src, options)`\n\n#### `prettyPrintFile(filename, options)`\n\n#### `prettyPrintAST(ast, options)`\n\n\n## Command Line\n\nTo recursively prettyprint all Marko v3 templates in a directory to use the HTML syntax:\n\n```\nmarko-prettyprint . --syntax html\n```\n\nTo recursively prettyprint all Marko v3 templates in a directory to use the HTML syntax:\n\n```\nmarko-prettyprint . --syntax concise\n```\n\nIndividual files and directories can also be prettyprinted:\n\n```\nmarko-prettyprint src/ foo/\nmarko-prettyprint template1.marko template2.marko\n```\n\nThe maximum line length (defaults to `80`) can be also be set:\n\n```\nmarko-prettyprint . --syntax html --max-len 120\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/marko-js/marko-prettyprint.git"
  },
  "scripts": {
    "init-tests": "./test/init-tests.sh",
    "jshint": "jshint src/",
    "mocha": "mocha --ui bdd --reporter spec ./test/",
    "test": "npm run mocha && npm run jshint"
  },
  "version": "1.3.5"
}
