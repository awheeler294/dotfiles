{
  "_args": [
    [
      {
        "raw": "load-plugin@^2.0.0",
        "scope": null,
        "escapedName": "load-plugin",
        "name": "load-plugin",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/tmp/apm-install-dir-11748-31601-3yitav.rv57xbhuxr/node_modules/atom-beautify/node_modules/remark"
    ]
  ],
  "_from": "load-plugin@>=2.0.0 <3.0.0",
  "_id": "load-plugin@2.1.0",
  "_inCache": true,
  "_location": "/atom-beautify/load-plugin",
  "_nodeVersion": "4.0.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/load-plugin-2.1.0.tgz_1484132449615_0.5060688306111842"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "2.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "load-plugin@^2.0.0",
    "scope": null,
    "escapedName": "load-plugin",
    "name": "load-plugin",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/atom-beautify/remark"
  ],
  "_resolved": "https://registry.npmjs.org/load-plugin/-/load-plugin-2.1.0.tgz",
  "_shasum": "5c688c560261997b47dfd0a7361faeb152acf7f5",
  "_shrinkwrap": null,
  "_spec": "load-plugin@^2.0.0",
  "_where": "/tmp/apm-install-dir-11748-31601-3yitav.rv57xbhuxr/node_modules/atom-beautify/node_modules/remark",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "browser": "browser.js",
  "bugs": {
    "url": "https://github.com/wooorm/load-plugin/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "npm-prefix": "^1.2.0",
    "resolve-from": "^2.0.0"
  },
  "description": "Load a submodule, plugin, or file",
  "devDependencies": {
    "nyc": "^10.0.0",
    "remark-cli": "^2.1.0",
    "remark-lint": "^5.2.0",
    "remark-preset-wooorm": "^1.0.0",
    "tape": "^4.0.0",
    "xo": "^0.17.0"
  },
  "directories": {},
  "dist": {
    "shasum": "5c688c560261997b47dfd0a7361faeb152acf7f5",
    "tarball": "https://registry.npmjs.org/load-plugin/-/load-plugin-2.1.0.tgz"
  },
  "files": [
    "browser",
    "index.js"
  ],
  "gitHead": "08654d5b4109378bc62cb279cd5a6a28e41f1745",
  "homepage": "https://github.com/wooorm/load-plugin#readme",
  "keywords": [
    "load",
    "submodule",
    "package",
    "plugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "load-plugin",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "readme": "# load-plugin [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nLoad a submodule, plugin, or file.  Like Node’s `require` and\n`require.resolve`, but from one or more places, and optionally\nglobal too.\n\n## Installation\n\n[npm][npm-install]:\n\n```bash\nnpm install load-plugin\n```\n\nWhen bundled for the browser, a small [file][browser] is included to\nwarn that, when any of the below functions are invoked, the action is\nunsupported.\n\n## Usage\n\nSay we’re in this project (with dependencies installed):\n\n```javascript\nvar load = require('load-plugin');\n\nload.resolve('lint', {prefix: 'remark'});\n// '/Users/tilde/projects/oss/load-plugin/node_modules/remark-lint/index.js'\n\nload.resolve('./index.js', {prefix: 'remark'});\n// '/Users/tilde/projects/oss/load-plugin/index.js'\n\nload.require('lint', {prefix: 'remark'});\n// [Function: lint]\n```\n\n## API\n\n### `loadPlugin(name[, options])`\n\nUses the standard node module loading strategy to require `name`\nin each given `cwd` (and optionally the global `node_modules`\ndirectory).\n\nIf a prefix is given and `name` is not a path, `prefix-name`\nis also searched (preferring these over non-prefixed modules).\n\n###### `options`\n\n*   `prefix` (`string`, optional)\n    — Prefix to search for;\n*   `cwd` (`string`, `Array.<string>`, default: `process.cwd()`)\n    — Place or places to search from;\n*   `global` (`boolean`, optional, defaults to whether global is detected)\n    — Whether to look for `name` in [global places][global].\n    If this is nully, `load-plugin` will detect if it’s currently\n    running in global mode: either because it’s in Electron, or because\n    a globally installed package is running it.\n\n###### Returns\n\nThe results of `require`ing the first path that exists.\n\n###### Throws\n\nIf `require`ing an existing path fails, or if no existing path exists.\n\n### `loadPlugin.resolve(name[, options])`\n\nSearch for `name`.  Accepts the same parameters as [`loadPlugin`][load-plugin]\nbut returns an absolute path for `name` instead of requiring it,\nand `null` if it cannot be found.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/load-plugin.svg\n\n[travis]: https://travis-ci.org/wooorm/load-plugin\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/load-plugin.svg\n\n[codecov]: https://codecov.io/github/wooorm/load-plugin\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[global]: https://docs.npmjs.com/files/folders#node-modules\n\n[load-plugin]: #loadpluginname-options\n\n[browser]: browser.js\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "presets": "wooorm"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/load-plugin.git"
  },
  "scripts": {
    "build": "npm run build-md",
    "build-md": "remark . --quiet --frail --output",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test/index.js",
    "test-coverage": "nyc --reporter lcov tape test/index.js"
  },
  "version": "2.1.0",
  "xo": {
    "space": true,
    "rules": {
      "import/no-dynamic-require": "off",
      "no-eq-null": "off",
      "eqeqeq": "off"
    }
  }
}
