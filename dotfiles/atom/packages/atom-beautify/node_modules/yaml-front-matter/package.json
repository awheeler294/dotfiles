{
  "_args": [
    [
      {
        "raw": "yaml-front-matter@^3.2.3",
        "scope": null,
        "escapedName": "yaml-front-matter",
        "name": "yaml-front-matter",
        "rawSpec": "^3.2.3",
        "spec": ">=3.2.3 <4.0.0",
        "type": "range"
      },
      "/tmp/d-11748-31601-168m5qz.n9wdkxd2t9/package.tgz"
    ]
  ],
  "_from": "yaml-front-matter@>=3.2.3 <4.0.0",
  "_id": "yaml-front-matter@3.4.0",
  "_inCache": true,
  "_location": "/atom-beautify/yaml-front-matter",
  "_nodeVersion": "4.2.4",
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/yaml-front-matter-3.4.0.tgz_1455748938749_0.28325859643518925"
  },
  "_npmUser": {
    "name": "dworthen",
    "email": "worthend.derek@gmail.com"
  },
  "_npmVersion": "2.14.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "yaml-front-matter@^3.2.3",
    "scope": null,
    "escapedName": "yaml-front-matter",
    "name": "yaml-front-matter",
    "rawSpec": "^3.2.3",
    "spec": ">=3.2.3 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/atom-beautify"
  ],
  "_resolved": "https://registry.npmjs.org/yaml-front-matter/-/yaml-front-matter-3.4.0.tgz",
  "_shasum": "c4bb5c41e8797fef584b1872cc052cdc26210dca",
  "_shrinkwrap": null,
  "_spec": "yaml-front-matter@^3.2.3",
  "_where": "/tmp/d-11748-31601-168m5qz.n9wdkxd2t9/package.tgz",
  "author": {
    "name": "Derek Worthen"
  },
  "bin": {
    "yaml-front-matter": "bin/js-yaml-front.js"
  },
  "bugs": {
    "url": "https://github.com/dworthen/js-yaml-front-matter/issues"
  },
  "dependencies": {
    "commander": "1.0.0",
    "js-yaml": "^3.5.2"
  },
  "description": "yaml front matter for JS. Parse yaml or JSON from the beginning of files.",
  "devDependencies": {
    "browser-sync": "^2.11.1",
    "gulp": "^3.9.0",
    "gulp-concat": "^2.6.0",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-uglify": "^1.5.1",
    "mocha": "~1.3.0",
    "should": "0.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "c4bb5c41e8797fef584b1872cc052cdc26210dca",
    "tarball": "https://registry.npmjs.org/yaml-front-matter/-/yaml-front-matter-3.4.0.tgz"
  },
  "gitHead": "9b7f0c72e99d1db9adb53f9da19fa1aefa89ef09",
  "homepage": "https://github.com/dworthen/js-yaml-front-matter#readme",
  "keywords": [
    "yaml"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "dworthen",
      "email": "worthend.derek@gmail.com"
    }
  ],
  "name": "yaml-front-matter",
  "optionalDependencies": {},
  "readme": "# Yaml Front Matter\r\n\r\nParses yaml or json at the front of a file. Places the parsed content plus the rest of the file's content into an object literal.\r\n\r\n- Works in the browser as of 3.0.0. [Online Demo](http://js-yaml-example.derekworthen.com).\r\n\r\n## Example\r\n\r\nThis\r\n\r\n    ---\r\n    name: Derek Worthen\r\n    age: young\r\n    contact:\r\n     email: email@domain.com\r\n     address: some location\r\n    pets:\r\n     - cat\r\n     - dog\r\n     - bat\r\n    match: !!js/regexp /pattern/gim\r\n    run: !!js/function function() { }\r\n    ---\r\n    Some Other content\r\n\r\nbecomes\r\n\r\n    { name: 'Derek Worthen',\r\n      age: 'young',\r\n      contact: { email: 'email@domain.com', address: 'some location' },\r\n      pets: [ 'cat', 'dog', 'bat' ],\r\n      match: /pattern/gim,\r\n      run: [Function],\r\n      __content: 'Some Other Content' }\r\n\r\nMay also use JSON\r\n\r\n    ---\r\n    {\r\n    \"name\": \"Derek Worthen\",\r\n    \"age\": \"young\",\r\n    \"anArray\": [\"one\",\"two\"],\r\n    \"subObj\":{\"field1\": \"one\"}\r\n    }\r\n    ---\r\n\r\n## Running Browser Example\r\n\r\n```shell\r\n$ npm install gulp -g && npm install --dev && npm start\r\n```\r\n\r\nThen visit `localhost:3000`.\r\n\r\n## Install with npm\r\n\r\n```shell\r\n$ npm install yaml-front-matter\r\n```\r\n\r\nUse the `-g` flag if you plan on using the command line tool.\r\n\r\n```shell\r\n$ npm install yaml-front-matter -g\r\n```\r\n    \r\n## Browser\r\n\r\nInclude one of the client files from `dist/`. \r\n\r\n```html\r\n<script src=\"js-yaml-front-client.min.js\"></script>\r\n<script>\r\n  // parse front matter with jsyaml.loadFront(String);\r\n</script>\r\n```\r\n\r\n## Building Client Script\r\n\r\nOutputs client files in `dist/`.\r\n\r\n```shell\r\n$ npm install gulp -g && npm install --dev && gulp build\r\n```\r\n\r\n## Command Line\r\n\r\n    Usage: js-yaml-front.js [options] <file>\r\n\r\n    Options:\r\n\r\n    -h, --help            output usage information\r\n    -V, --version         output the version number\r\n    -c, --content [name]  set the property name for the files contents [__content]\r\n\r\n## JS-YAML\r\n\r\nYaml front matter is a wrapper to [js-yaml](https://github.com/nodeca/js-yaml). Therefore yaml front \r\nmatter supports the same api as js-yaml plus a more so pay [js-yaml](https://github.com/nodeca/js-yaml) a visit. \r\nYou can directly access js-yaml in the command line by running `$ js-yaml` (note this will run the actual js-yaml \r\nparser and will not be able to parse input intended for yaml-front-matter).\r\n\r\n## API\r\n\r\n### loadFront(string|buffer|file, [contentKey])\r\n\r\n```JavaScript\r\nvar yamlFront = require('yaml-front-matter')\r\n  , input = '---\\npost: title one\\n';\r\n    input += 'anArray:\\n - one\\n - two\\n';\r\n    input += 'subObject:\\n prop1: cool\\n prop2: two';\r\n    input += '\\nreg: !!js/regexp /pattern/gim';\r\n    input += '\\nfun: !!js/function function() {  }\\n---\\n';\r\n    input += 'content\\nmore';\r\n\r\nvar results = yamlFront.loadFront(input);\r\nconsole.log(results);\r\n```\r\n\r\nthe above will produce the following in the console.\r\n\r\n```shell\r\n{ post: 'title one',\r\n  anArray: [ 'one', 'two' ],\r\n  subObject: { obj1: 'cool', obj2: 'two' },\r\n  reg: /pattern/gim,\r\n  fun: [Function],\r\n  __content: '\\ncontent\\nmore' }\r\n```\r\n\r\nThe front matter is optional:\r\n\r\n    // somefile.ext\r\n    Hello World!\r\n\r\n    // another location\r\n    var frontMatter = require('yaml-front-matter')\r\n      , results = frontMatter.loadFront('somefile.ext', 'myContent');\r\n\r\nWill produce\r\n\r\n    { myContent: \"Hello World!\" }\r\n\r\nContent all together is optional\r\n\r\n    frontMatter.loadFront('');\r\n    // will produce { __content: '' }\r\n\r\n__NOTE:__ This behavior differs from previos versions as previous versions returned `undefined` when the input did not contain yaml front matter.\r\n\r\n__NOTE:__ The --- are required to denote the start and end of front matter. There must be a newline after the opening --- and a newline preceding the closing ---.\r\n\r\n## Changelog\r\n\r\n- Now supports parsing JSON front matter.\r\n- A newline must come after the opening --- and precede the closing ---.\r\n- Front matter is optional.\r\n- Browser API \r\n\r\n## TODO\r\n\r\n-\r\n\r\n## Tests\r\n\r\nThen run\r\n\r\n```shell\r\n$ npm install --dev && npm install mocha -g && npm test\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dworthen/js-yaml-front-matter.git"
  },
  "scripts": {
    "start": "gulp serve",
    "test": "mocha -u bdd --reporter spec"
  },
  "version": "3.4.0"
}
