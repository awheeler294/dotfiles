{
  "_args": [
    [
      {
        "raw": "commandpost@^1.0.0",
        "scope": null,
        "escapedName": "commandpost",
        "name": "commandpost",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/tmp/apm-install-dir-11748-31601-3yitav.rv57xbhuxr/node_modules/atom-beautify/node_modules/typescript-formatter"
    ]
  ],
  "_from": "commandpost@>=1.0.0 <2.0.0",
  "_id": "commandpost@1.0.1",
  "_inCache": true,
  "_location": "/atom-beautify/commandpost",
  "_nodeVersion": "6.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/commandpost-1.0.1.tgz_1474641980341_0.7173167208675295"
  },
  "_npmUser": {
    "name": "vvakame",
    "email": "vvakame@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "commandpost@^1.0.0",
    "scope": null,
    "escapedName": "commandpost",
    "name": "commandpost",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/atom-beautify/typescript-formatter"
  ],
  "_resolved": "https://registry.npmjs.org/commandpost/-/commandpost-1.0.1.tgz",
  "_shasum": "7d7e3e69ae8fe7d6949341e91596ede9b2d631fd",
  "_shrinkwrap": null,
  "_spec": "commandpost@^1.0.0",
  "_where": "/tmp/apm-install-dir-11748-31601-3yitav.rv57xbhuxr/node_modules/atom-beautify/node_modules/typescript-formatter",
  "author": {
    "name": "vvakame"
  },
  "bugs": {
    "url": "https://github.com/vvakame/commandpost/issues"
  },
  "dependencies": {},
  "description": "commandline option parser",
  "devDependencies": {
    "@types/mocha": "^2.2.32",
    "@types/node": "^6.0.40",
    "@types/power-assert": "^0.0.28",
    "es6-promise": "^3.3.1",
    "espower-loader": "^1.0.1",
    "grunt": "^1.0.1",
    "grunt-contrib-clean": "^1.0.0",
    "grunt-conventional-changelog": "^6.1.0",
    "grunt-exec": "^1.0.1",
    "grunt-mocha-test": "^0.13.2",
    "grunt-tslint": "^3.2.1",
    "grunt-typedoc": "^0.2.4",
    "load-grunt-tasks": "^3.5.2",
    "mocha": "^3.0.2",
    "power-assert": "^1.4.1",
    "source-map-support": "^0.4.2",
    "tslint": "^3.15.1",
    "typescript": "^2.0.3",
    "typescript-formatter": "^3.0.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "7d7e3e69ae8fe7d6949341e91596ede9b2d631fd",
    "tarball": "https://registry.npmjs.org/commandpost/-/commandpost-1.0.1.tgz"
  },
  "gitHead": "ed2e8658f387aa1a784f1849df00776206b8cd77",
  "homepage": "https://github.com/vvakame/commandpost",
  "license": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "vvakame",
      "email": "vvakame@gmail.com"
    }
  ],
  "name": "commandpost",
  "optionalDependencies": {},
  "readme": "# commandpost [![Circle CI](https://circleci.com/gh/vvakame/commandpost.png?style=badge)](https://circleci.com/gh/vvakame/commandpost)\n\ncommandpost is a command-line option parser.\nThis library inspired by [commander](https://www.npmjs.com/package/commander).\n\ncommander is very user friendly, but not [TypeScript](https://www.npmjs.com/package/typescript) friendly.\ncommandpost is improve it.\nOf course, commandpost can also be used from ordinary JavaScript program. :+1:\n\n## Installation\n\n```\n$ npm install --save commandpost\n```\n\n## How to use\n\n### Basic usage\n\n```\n$ cat cli.ts\nimport * as commandpost from \"commandpost\";\n\nlet root = commandpost\n\t.create<{ spice: string[]; }, { food: string; }>(\"dinner <food>\")\n\t.version(\"1.0.0\", \"-v, --version\")\n\t.description(\"today's dinner!\")\n\t.option(\"-s, --spice <name>\", \"What spice do you want? default: pepper\")\n\t.action((opts, args) => {\n\t\tconsole.log(`Your dinner is ${args.food} with ${opts.spice[0] || \"pepper\"}!`);\n\t});\n\ncommandpost\n\t.exec(root, process.argv)\n\t.catch(err => {\n\t\tif (err instanceof Error) {\n\t\t\tconsole.error(err.stack);\n\t\t} else {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tprocess.exit(1);\n\t});\n\n$ node cli.js --help\n  Usage: dinner [options] [--] <food>\n\n  Options:\n\n    -s, --spice <name>  What spice do you want? default: pepper\n\n$ node cli.js -s \"soy sause\" \"fillet steak\"\nYour dinner is fillet steak with soy sause!\n```\n\n### Command\n\ntop level command is created by `commandpost.create` function.\n\ncommandpost can have a sub command.\nsub command is created by `topLevelCommand.subCommand` method.\nlike [this](https://github.com/vvakame/commandpost/blob/master/example/usage.ts#L36).\n\ncommandpost can configure several items.\ne.g. version information, app description, CLI usage and help message.\nI recommend that you should setup `.version` and `.description`.\nUsually, automatic generated help message satisfy you.\n\n### Option\n\n```\n// shorthand style & formal style option with required parameter. option value is convert to string[].\ncmd.option(\"-c, --config <configFile>\", \"Read setting from specified config file path\");\n\n// option with optional parameter. option value is convert to string[].\ncmd.option(\"-c, --config [configFile]\", \"Read setting from specified config file path\");\n\n// option without parameter. option value is convert to boolean. default false.\ncmd.option(\"--suppress-warning\", \"Suppress warning\");\n\n// option with `--no-` prefix. option value is convert to boolean. default true.\ncmd.option(\"--no-type-checking\", \"Type checking disabled\");\n```\n\nIf you want to handling unknown options, You can use `.allowUnknownOption` method.\n\n### Argument\n\n```\n// required argument\ncommandpost.create<{}, { food: string; }>(\"dinner <food>\");\n\n// optonal argument\ncommandpost.create<{}, { food: string; }>(\"dinner [food]\");\n\n// variadic argument\ncommandpost.create<{}, { foods: string[]; }>(\"dinner <food...>\");\n```\n\n### Examples\n\n* [example](https://github.com/vvakame/commandpost/blob/master/example/usage.ts) dir\n* [typescript-formatter](https://github.com/vvakame/typescript-formatter/blob/master/lib/cli.ts)\n* [dtsm](https://github.com/vvakame/dtsm/blob/master/lib/cli.ts)\n* [review.js](https://github.com/vvakame/review.js/blob/master/lib/cli.ts)\n* [prh](https://github.com/vvakame/prh/blob/master/lib/cli.ts)\n\n## Contributing\n\nThis package's author vvakame is not native english speaker. My first language is Japanese.\nIf you find incorrect english, please send me a pull request.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vvakame/commandpost.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.0.1"
}
