{
  "_args": [
    [
      {
        "raw": "typescript-formatter@^2.3.0",
        "scope": null,
        "escapedName": "typescript-formatter",
        "name": "typescript-formatter",
        "rawSpec": "^2.3.0",
        "spec": ">=2.3.0 <3.0.0",
        "type": "range"
      },
      "/tmp/d-11748-31601-168m5qz.n9wdkxd2t9/package.tgz"
    ]
  ],
  "_from": "typescript-formatter@>=2.3.0 <3.0.0",
  "_id": "typescript-formatter@2.3.0",
  "_inCache": true,
  "_location": "/atom-beautify/typescript-formatter",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/typescript-formatter-2.3.0.tgz_1468650419543_0.3646096733864397"
  },
  "_npmUser": {
    "name": "vvakame",
    "email": "vvakame@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "typescript-formatter@^2.3.0",
    "scope": null,
    "escapedName": "typescript-formatter",
    "name": "typescript-formatter",
    "rawSpec": "^2.3.0",
    "spec": ">=2.3.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/atom-beautify"
  ],
  "_resolved": "https://registry.npmjs.org/typescript-formatter/-/typescript-formatter-2.3.0.tgz",
  "_shasum": "9e485348a339bc1f58f2c68e1df81e74b0199172",
  "_shrinkwrap": null,
  "_spec": "typescript-formatter@^2.3.0",
  "_where": "/tmp/d-11748-31601-168m5qz.n9wdkxd2t9/package.tgz",
  "author": {
    "name": "vvakame+dev@gmail.com"
  },
  "bin": {
    "tsfmt": "./bin/tsfmt"
  },
  "bugs": {
    "url": "https://github.com/vvakame/typescript-formatter/issues"
  },
  "dependencies": {
    "commandpost": "^1.0.0",
    "editorconfig": "^0.13.2",
    "glob-expand": "^0.2.0"
  },
  "description": "Formatter of TypeScript code",
  "devDependencies": {
    "dtsm": "^1.1.0",
    "es6-promise": "^3.2.1",
    "espower-loader": "^1.0.0",
    "grunt": "^1.0.1",
    "grunt-contrib-clean": "^1.0.0",
    "grunt-conventional-changelog": "^6.1.0",
    "grunt-dtsm": "^1.0.0",
    "grunt-exec": "^1.0.0",
    "grunt-mocha-test": "^0.12.7",
    "grunt-ts": "^6.0.0-beta.2",
    "grunt-tsconfig-update": "^0.0.1",
    "grunt-tslint": "^3.1.1",
    "load-grunt-tasks": "^3.5.0",
    "mocha": "^2.5.3",
    "power-assert": "^1.2.0",
    "tslint": "^3.13.0",
    "typescript": "^1.8.10"
  },
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dist": {
    "shasum": "9e485348a339bc1f58f2c68e1df81e74b0199172",
    "tarball": "https://registry.npmjs.org/typescript-formatter/-/typescript-formatter-2.3.0.tgz"
  },
  "engines": {
    "node": ">= 4.2.0"
  },
  "gitHead": "376bf33b4a817c459465c407b1085e360e0afee5",
  "homepage": "https://github.com/vvakame/typescript-formatter",
  "keywords": [
    "TypeScript"
  ],
  "license": "MIT",
  "main": "./index",
  "maintainers": [
    {
      "name": "vvakame",
      "email": "vvakame@gmail.com"
    }
  ],
  "name": "typescript-formatter",
  "optionalDependencies": {},
  "peerDependencies": {
    "typescript": "^1.0.0 || ^2.0.0 || >=2.1.0-dev"
  },
  "readme": "# TypeScript Formatter (tsfmt) [![Build Status](https://travis-ci.org/vvakame/typescript-formatter.svg)](https://travis-ci.org/vvakame/typescript-formatter) [![Dependency Status](https://david-dm.org/vvakame/typescript-formatter.svg?theme=shields.io)](https://david-dm.org/vvakame/typescript-formatter)\n\nA TypeScript code formatter powered by TypeScript Compiler Service.\n\n```bash\n$ tsfmt --help\n  Usage: tsfmt [options] [--] [files...]\n\n  Options:\n\n    -r, --replace      replace .ts file\n    --verify           checking file format\n    --baseDir <path>   config file lookup from <path>\n    --stdin            get formatting content from stdin\n    --no-tslint        don't read a tslint.json\n    --no-editorconfig  don't read a .editorconfig\n    --no-tsfmt         don't read a tsfmt.json\n    --verbose          makes output more verbose\n```\n\n## Installation\n\n```npm install -g typescript-formatter```\n\n## Usage\n\n### Format or verify specific TypeScript files\n\n```bash\n$ cat sample.ts\nclass Sample {hello(word=\"world\"){return \"Hello, \"+word;}}\nnew Sample().hello(\"TypeScript\");\n```\n\n```bash\n# basic. read file, output to stdout.\n$ tsfmt sample.ts\nclass Sample { hello(word= \"world\") { return \"Hello, \" + word; } }\nnew Sample().hello(\"TypeScript\");\n```\n\n```bash\n# from stdin. read from stdin, output to stdout.\n$ cat sample.ts | tsfmt --stdin\nclass Sample { hello(word= \"world\") { return \"Hello, \" + word; } }\nnew Sample().hello(\"TypeScript\");\n```\n\n```bash\n# replace. read file, and replace file.\n$ tsfmt -r sample.ts\nreplaced sample.ts\n$ cat sample.ts\nclass Sample { hello(word= \"world\") { return \"Hello, \" + word; } }\nnew Sample().hello(\"TypeScript\");\n```\n\n```bash\n# verify. checking file format.\n$ tsfmt --verify sample.ts\nsample.ts is not formatted\n$ echo $?\n1\n```\n\n### Reformat all files in a TypeScript project\n\nIf no files are specified on the command line but\na TypeScript project file (tsconfig.json) exists,\nthe list of files will be read from the project file.\n\n```bash\n# reads list of files to format from tsconfig.json\ntsfmt -r\n```\n\n## Note\n\nnow `indentSize` parameter is ignored. it is TypeScript compiler matters.\n\n## Read Settings From Files\n\n1st. Read settings from tsfmt.json.\n\n```json\n{\n  \"indentSize\": 4,\n  \"tabSize\": 4,\n  \"newLineCharacter\": \"\\r\\n\",\n  \"convertTabsToSpaces\": true,\n  \"insertSpaceAfterCommaDelimiter\": true,\n  \"insertSpaceAfterSemicolonInForStatements\": true,\n  \"insertSpaceBeforeAndAfterBinaryOperators\": true,\n  \"insertSpaceAfterKeywordsInControlFlowStatements\": true,\n  \"insertSpaceAfterFunctionKeywordForAnonymousFunctions\": false,\n  \"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis\": false,\n  \"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets\": false,\n  \"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces\": false,\n  \"placeOpenBraceOnNewLineForFunctions\": false,\n  \"placeOpenBraceOnNewLineForControlBlocks\": false\n}\n\n```\n\n2nd. Read settings from .editorconfig ([editorconfig](http://editorconfig.org/))\n\n```text\n# EditorConfig is awesome: http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nindent_style = tab\ntab_width = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n```\n\n3rd. Read settings from tslint.json ([tslint](https://www.npmjs.org/package/tslint))\n\n```json\n{\n  \"rules\": {\n    \"indent\": [true, 4],\n    \"whitespace\": [true,\n      \"check-branch\",\n      \"check-operator\",\n      \"check-separator\"\n    ]\n  }\n}\n```\n\n### Read Settings Rules\n\n```\n$ tree -a\n.\n├── foo\n│   ├── bar\n│   │   ├── .editorconfig\n│   │   └── buzz.ts\n│   ├── fuga\n│   │   ├── piyo.ts\n│   │   └── tsfmt.json\n│   └── tsfmt.json\n└── tslint.json\n\n3 directories, 6 files\n```\n\n1. exec `$ tsfmt -r foo/bar/buzz.ts foo/fuga/piyo.ts`\n2. for foo/bar/buzz.ts, read foo/tsfmt.json and foo/bar/.editorconfig and ./tslint.json\n3. for foo/fuga/piyo.ts, read foo/fuga/tsfmt.json and ./tslint.json\n\n## Change log\n\nSee [CHANGELOG](https://github.com/vvakame/typescript-formatter/blob/master/CHANGELOG.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/vvakame/typescript-formatter.git"
  },
  "scripts": {
    "build": "grunt default",
    "setup": "grunt setup",
    "test": "grunt test"
  },
  "version": "2.3.0"
}
